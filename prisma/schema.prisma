generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  address    String?
  password   String
  location   String?
  contact_no String   @db.VarChar(10)
  email      String
  pincode    String
  // relational fields
  searches   Search[]
}

model Search {
  id         Int      @id @default(autoincrement())
  query      String
  location   String?
  created_at DateTime @default(now())

  // relational fields
  redirects         Redirect[]
  purchased_product Purchase?  @relation(fields: [purchase_id], references: [id])
  User              User?      @relation(fields: [userId], references: [id])
  userId            Int?
  purchase_id       Int?
}

model Redirect {
  id                 Int      @id @default(autoincrement())
  url                String
  purchased_quantity Int?
  created_at         DateTime @default(now())

  // relational fields
  Search   Search @relation(fields: [searchId], references: [id])
  searchId Int
}

model Pharmacy {
  id                      Int      @id @default(autoincrement())
  name                    String
  location                String
  home_delivery_locations String[]
  contact_no              String
  email                   String
  license_no              String

  // relational fields
  has_products Inventory[]
}

model Product {
  id           Int       @id @default(autoincrement())
  name         String
  manufacturer String
  expiry       DateTime?
  manufactured DateTime?

  // relational fields
  purchased_by Purchase[]
  present_in   Inventory[]
}

model Inventory {
  id       Int   @id @default(autoincrement())
  price    Float
  quantity Int?

  // relational fields
  Product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  Pharmacy   Pharmacy @relation(fields: [pharmacyId], references: [id])
  pharmacyId Int
}

model Purchase {
  id       Int    @id @default(autoincrement())
  price    Float?
  quantity Int?

  // relational fields
  searched_by Search[]
  Product     Product  @relation(fields: [productId], references: [id])
  productId   Int
}
